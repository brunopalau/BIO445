View(df)
networks <- lapply(df$file,function(x){
return (download_and_write_csv_single_network(x))
})
networks
df$file
network <- download_and_write_csv_single_network("M_PL_036")
network
View(networks)
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
return (network)
})
networks
networks[[1]]
networks[[2]]
networks[[3]]
networks[[4]]
networks[[5]]
networks[[6]]
download_and_write_csv_single_network <- function(network_name){
networkName <- network_name
speciesName <- "yes"
url <- paste("http://www.web-of-life.es/download/", networkName, "_", speciesName, ".csv", sep = "")
data <- fread(url)
write.csv(data, file = paste(trimws(networkName), ".csv", sep = ""))
return(data)
}
files <- c("M_PL_036", "M_PL_005", "M_PL_061_48", "M_PL_009", "M_PL_042", "M_PL_019", "M_PL_020", "M_PL_045")
coord <- c("39,46","38.8417", "-4.67", "68.35", "-0.95", "-36.45", "81.82", "71")
names <- c("Flores, Acores", "Pikes Peak, USA", "Morne, Seychellos National Park","Latnjajaure, Sweden", "Perto Villanil, Isabela Island", "Snowy mountains, Australia", "Hazen Camp, Canada", "Uummannaq Island, Greenland")
fact <- c("Island", "Continent", "Island", "Cost", "Island", "Continent", "Continent", "Cost")
df <- data_frame(file = files, coordinate = coord, name = names, location = fact)
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
return (network)
})
networks[[1]]
networks[[2]]
networks[[3]]
n <- download_and_write_csv_single_network("M_PL_005")
n
n
pacman::p_load(tidyverse, rjson, data.table, bipartite, igraph, Matrix)
download_and_write_csv_single_network <- function(network_name){
networkName <- network_name
speciesName <- "yes"
url <- paste("http://www.web-of-life.es/download/", networkName, "_", speciesName, ".csv", sep = "")
data <- fread(url)
write.csv(data, file = paste(trimws(networkName), ".csv", sep = ""))
return(data)
}
files <- c("M_PL_036", "M_PL_005", "M_PL_061_48", "M_PL_009", "M_PL_042", "M_PL_019", "M_PL_020", "M_PL_045")
coord <- c("39,46","38.8417", "-4.67", "68.35", "-0.95", "-36.45", "81.82", "71")
names <- c("Flores, Acores", "Pikes Peak, USA", "Morne, Seychellos National Park","Latnjajaure, Sweden", "Perto Villanil, Isabela Island", "Snowy mountains, Australia", "Hazen Camp, Canada", "Uummannaq Island, Greenland")
fact <- c("Island", "Continent", "Island", "Cost", "Island", "Continent", "Continent", "Cost")
df <- data_frame(file = files, coordinate = coord, name = names, location = fact)
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
return (network)
})
networks
n <- download_and_write_csv_single_network("M_PL_005")
networks[[1]]
networks[[2]]
n <- download_and_write_csv_single_network("M_PL_062")
n
n <- download_and_write_csv_single_network("M_PL_062")
n
View(n)
max(n)
n <- download_and_write_csv_single_network("M_PL_061_48")
n <- download_and_write_csv_single_network("M_PL_009")
n <- download_and_write_csv_single_network("M_PL_042")
n <- download_and_write_csv_single_network("M_PL_019")
n <- download_and_write_csv_single_network("M_PL_020")
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
network[network >= 1] <- 1
return (network)
})
networks[[1]]
nestedness_binmatnest2 <- function(matrix) {
# The following function calculates the nestedness temperature, which ranges between 0 (fully nested) and 100 (not nested)
value <- as.numeric(nested(matrix, "binmatnest"))
# modify value here as indicated in the exercise sheet
value <- (100-value)/100
return(value)
}
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, index = c(1:8))
df %>%
mutate(density = nestedness_binmatnest2(networks[[index]]))
df <- df %>%
mutate(density = nestedness_binmatnest2(networks[[index]]))
df$index
index = 1
nestedness_binmatnest2(networks[[index]]
)
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, I = c(1:8))
df <- df %>%
mutate(density = nestedness_binmatnest2(networks[[I]]))
df$density <- lapply(networks, nestedness_binmatnest2)
density <- function(matrix){
# calculate connentedness here and store it as the variable result
result <- sum(rowSums(matrix))/ (nrow(matrix)*ncol(matrix))
return(result)
}
df$density <- lapply(networks, density)
nestedness_binmatnest2 <- function(matrix) {
# The following function calculates the nestedness temperature, which ranges between 0 (fully nested) and 100 (not nested)
value <- as.numeric(nested(matrix, "binmatnest"))
# modify value here as indicated in the exercise sheet
value <- (100-value)/100
return(value)
}
df$nestedness <- lapply(networks, nestedness_binmatnest2)
library(ggplot2)
ggplot(df, aes(x = location, y = density))+
geom_histogram()
ggplot(df, aes(x = location, y = density))+
geom_boxplot()
ggplot(df, aes(x = as.factor(location), y = density))+
geom_boxplot()
df$location
df <- data_frame(file = files, coordinate = coord, name = names, location = as.factor(fact), I = c(1:8))
density <- function(matrix){
# calculate connentedness here and store it as the variable result
result <- sum(rowSums(matrix))/ (nrow(matrix)*ncol(matrix))
return(result)
}
df$density <- lapply(networks, density)
nestedness_binmatnest2 <- function(matrix) {
# The following function calculates the nestedness temperature, which ranges between 0 (fully nested) and 100 (not nested)
value <- as.numeric(nested(matrix, "binmatnest"))
# modify value here as indicated in the exercise sheet
value <- (100-value)/100
return(value)
}
df$nestedness <- lapply(networks, nestedness_binmatnest2)
ggplot(df, aes(x = as.factor(location), y = density))+
geom_boxplot()
ggplot(df, aes(x = location, y = density))+
geom_point()
location
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, I = c(1:8))
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, I = c(1:8))
density <- function(matrix){
# calculate connentedness here and store it as the variable result
result <- sum(rowSums(matrix))/ (nrow(matrix)*ncol(matrix))
return(result)
}
df$density <- lapply(networks, density)
df$nestedness <- lapply(networks, nestedness_binmatnest2)
ggplot(df, aes(x = location, y = density))+
geom_point()
df$nestedness
df$nestedness <- unlist(lapply(networks, nestedness_binmatnest2))
df$nestedness
df$density <- unlist(lapply(networks, density))
ggplot(df, aes(x = nested, y = density))+
geom_point()
ggplot(df, aes(x = nestedness, y = density))+
geom_point()
ggplot(df, aes(x = nestedness, y = density, color = location))+
geom_point()
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer()
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_continuous()
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer()
?scale_color_brewer
?scale_color_brewer
pacman::p_load(tidyverse, rjson, data.table, bipartite, igraph, Matrix)
download_and_write_csv_single_network <- function(network_name){
networkName <- network_name
speciesName <- "yes"
url <- paste("http://www.web-of-life.es/download/", networkName, "_", speciesName, ".csv", sep = "")
data <- fread(url)
write.csv(data, file = paste(trimws(networkName), ".csv", sep = ""))
return(data)
}
files <- c("M_PL_036", "M_PL_062", "M_PL_061_48", "M_PL_009", "M_PL_042", "M_PL_019", "M_PL_020", "M_PL_045")
coord <- c("39,46","39.28", "-4.67", "68.35", "-0.95", "-36.45", "81.82", "71")
names <- c("Flores, Acores", "Carlin Ville, USA", "Morne, Seychellos National Park","Latnjajaure, Sweden", "Perto Villanil, Isabela Island", "Snowy mountains, Australia", "Hazen Camp, Canada", "Uummannaq Island, Greenland")
fact <- c("Island", "Continent", "Island", "Cost", "Island", "Continent", "Continent", "Cost")
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, I = c(1:8))
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
network[network >= 1] <- 1
return (network)
})
density <- function(matrix){
# calculate connentedness here and store it as the variable result
result <- sum(rowSums(matrix))/ (nrow(matrix)*ncol(matrix))
return(result)
}
df$density <- unlist(lapply(networks, density))
nestedness_binmatnest2 <- function(matrix) {
# The following function calculates the nestedness temperature, which ranges between 0 (fully nested) and 100 (not nested)
value <- as.numeric(nested(matrix, "binmatnest"))
# modify value here as indicated in the exercise sheet
value <- (100-value)/100
return(value)
}
df$nestedness <- unlist(lapply(networks, nestedness_binmatnest2))
library(ggplot2)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer()
?scale_color_brewer
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 2)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 3)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 4)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 5)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 6)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 7)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = "volcano")
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point()+
scale_color_brewer(palette = 7)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point(size=3)+
scale_color_brewer(palette = 7)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point(size=3)+
scale_color_brewer(palette = "spectral")
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point(size=3)+
scale_color_brewer(palette = "RdBu")
ggplot(df, aes(x = density, y = coord, color = location))+
geom_point()+
geom_smooth("lm")
ggplot(df, aes(x = density, y = coord, color = location))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = density, y = coord, fill = location))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = density, y = coord, color = location))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()+
ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()+
ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()+
ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()
ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()
ggplot(df, aes(x = coord, y = nestedness, color = location))+
geom_point()
library(ggpubr)
coord_dens <- ggplot(df, aes(x = coord, y = density, color = location))+
geom_point()
coord_nested <- ggplot(df, aes(x = coord, y = nestedness, color = location))+
geom_point()
loc_dens <- ggplot(df, aes(x = location, y = density, color = location))+
geom_point()
loc_nested <- ggplot(df, aes(x = location, y = nestedness, color = location))+
geom_point()
ggarrange(coord_dens,coord_nested,loc_dens,loc_nested)
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point(size=3)+
scale_color_brewer(palette = "RdBu")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_brewer(palette = "RdBu")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_continuous()
scale_color_continuous
?scale_color_continuous
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_continuous(type="viridis")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_continuous(type="RdBu")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_brewer(type="RdBu")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_brewer("RdBu")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_brewer()
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
mid = mean(df$coordinate)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coord), shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
ggplot(df, aes(x = nestedness, y = density, color = coord, shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
ggplot(df, aes(x = nestedness, y = density, color = coordinate, shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
mid = mean(df$coordinate)
ggplot(df, aes(x = nestedness, y = density, color = coordinate, shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_color_gradient2(midpoint = mid, low = "blue", mid = "white", high = "red", space = "Lab")
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = muted("red"),
mid = "white",
high = muted("blue"),
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = muted("red"),
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)+theme_void()
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)+theme_classic(base_size = 25)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=3)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)+theme_dark()
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=10)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)+theme_dark()
pacman::p_load(tidyverse, rjson, data.table, bipartite, igraph, Matrix)
download_and_write_csv_single_network <- function(network_name){
networkName <- network_name
speciesName <- "yes"
url <- paste("http://www.web-of-life.es/download/", networkName, "_", speciesName, ".csv", sep = "")
data <- fread(url)
write.csv(data, file = paste(trimws(networkName), ".csv", sep = ""))
return(data)
}
files <- c("M_PL_036", "M_PL_062", "M_PL_061_48", "M_PL_009", "M_PL_042", "M_PL_019", "M_PL_020", "M_PL_045")
coord <- c("39,46","39.28", "-4.67", "68.35", "-0.95", "-36.45", "81.82", "71")
names <- c("Flores, Acores", "Carlin Ville, USA", "Morne, Seychellos National Park","Latnjajaure, Sweden", "Perto Villanil, Isabela Island", "Snowy mountains, Australia", "Hazen Camp, Canada", "Uummannaq Island, Greenland")
fact <- c("Island", "Continent", "Island", "Cost", "Island", "Continent", "Continent", "Cost")
df <- data_frame(file = files, coordinate = coord, name = names, location = fact, I = c(1:8))
networks <- lapply(df$file,function(x){
network <- download_and_write_csv_single_network(x)
names <- network$V
network <- as.matrix(network[,-1])
rownames(network) <- names
network[network >= 1] <- 1
return (network)
})
density <- function(matrix){
# calculate connentedness here and store it as the variable result
result <- sum(rowSums(matrix))/ (nrow(matrix)*ncol(matrix))
return(result)
}
df$density <- unlist(lapply(networks, density))
nestedness_binmatnest2 <- function(matrix) {
# The following function calculates the nestedness temperature, which ranges between 0 (fully nested) and 100 (not nested)
value <- as.numeric(nested(matrix, "binmatnest"))
# modify value here as indicated in the exercise sheet
value <- (100-value)/100
return(value)
}
df$nestedness <- unlist(lapply(networks, nestedness_binmatnest2))
library(ggplot2)
library(ggpubr)
mid = mean(df$coordinate)
ggplot(df, aes(x = nestedness, y = density, color = as.numeric(coordinate), shape = location))+
geom_point(size=10)+
scale_colour_gradient2(
low = "red",
mid = "white",
high = "blue",
midpoint = 0,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)+theme_dark()
nested
# R preparations ---------------------------------------------------------------------------------
# Remove current working environment, load packages and set your working directory
rm(list = ls())
if (!requireNamespace("BiocManager", quietly = TRUE))
j
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChemmineR")
library(caret)
setwd("Uni/Computational/HS22/BIO445/BIO445_day10/for students/")
# set seed for reproducibility
set.seed(123)
tannin <- read.SDFset("Tannin.sdf")
getwd
getwd()
library(ChemmineR)
tannin <- read.SDFset("/Tannin.sdf")
library(caret)
tannin <- read.SDFset("/Tannin.sdf")
tannin <- read.SDFset("/Tannin.sdf")
library(ChemmineR)
tannin <- read.SDFset("/Tannin.sdf")
library(caret)
library(ChemmineR)
library(htmltools)
library(ChemmineR)
# R preparations ---------------------------------------------------------------------------------
# Remove current working environment, load packages and set your working directory
rm(list = ls())
library(ChemmineR)
